
// Shuffles test_items table (no restrictions on item order).
int shuffle_test_items()
{
     int nitems = test_items.size;

    // Depending on criteria and table contents it may happen that it takes
    // several attempts to make the shuffling succeed. We'll try it 100 times
    // before giving up.
    int nattempts;
    bool again = true;
    while (again && ++nattempts < 100)
    {
        // First shuffle the entire item table.
        again = false;
        test_items.shuffle(0, -1);

        // Walk over the table and check for items conflicting with the
        // criterion. If an item conflicts, then swap it randomly with one
        // of the items not yet looked at.
        int n;
        while (n < nitems)
        {
            int nitemswaps;
            while (!is_allowed_item_sequence(test_items, n))
            {
                if (n+1 == nitems || ++nitemswaps == 10)
                {
                    again = true;
                    break;
                }
                test_items.swap(n, random(n, nitems - n));
            }
            if (again) break;
            n++;
        }
    }

    if (again)
        println("Unable to shuffle test_items according to criteria. "
            "Check table and/or criteria.");

    return again ? ERROR : OK;
}

// Checks validity of item at position n (zero-indexed) in specified items table.
bool is_allowed_item_sequence(TestItem[] items, int index)
{

    // The maximum number of subsequent type of items is 3.
    if (index >= 2 &&
    	items[index].type == items[index-1].type &&
        items[index].type == items[index-2].type
    ) return false;

    if (index >= 1 &&
    	items[index].structure == items[index-1].structure
    ) return false;

    int window_size = 3;
    int window_shift = -1;
    if (index >= window_size-1)
    {
        int subject_counter = 1;
        string current_subject = items[index].subject;

        while (window_shift > -window_size)
        {
            if(items[index+window_shift].subject == current_subject)
                subject_counter = subject_counter+1;
            if(subject_counter > 1)
                return false;
            window_shift = window_shift - 1;

        }
    }

    return true;
}
